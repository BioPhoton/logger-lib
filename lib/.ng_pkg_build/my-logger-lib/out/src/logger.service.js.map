{"version":3,"file":"logger.service.js","sourceRoot":"","sources":["logger.service.ts"],"names":[],"mappings":";;;;AAAA,OAAO,EAAE,UAAU,EAAE,MAAM,eAAe,CAAC;AAC3C,OAAO,EAAE,YAAY,EAAE,MAAM,iBAAiB,CAAC;AAC/C,OAAO,EAAE,mBAAmB,EAAE,MAAM,yBAAyB,CAAC;AAG9D,MAAM;;;;;IAEF,YACY,QACA;QADA,WAAM,GAAN,MAAM;QACN,iBAAY,GAAZ,YAAY;KACnB;;;;;IAEL,KAAK,CAAC,OAAe;QACjB,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC;YAAC,MAAM,CAAC;QACrC,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC;KACpD;;;;;IAED,GAAG,CAAC,OAAe;QACf,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC;KAClD;;;YAfJ,UAAU;;;;YAHF,YAAY;YACZ,mBAAmB","sourcesContent":["import { Injectable } from '@angular/core';\nimport { LoggerConfig } from './logger-config';\nimport { LogFormatterService } from './log-formatter.service';\n\n@Injectable()\nexport class LoggerService {\n\n    constructor(\n        private config: LoggerConfig,\n        private logFormatter: LogFormatterService\n    ) { }\n\n    debug(message: string): void {\n        if (!this.config.enableDebug) return;\n        console.debug(this.logFormatter.format(message));\n    }\n\n    log(message: string): void {\n        console.log(this.logFormatter.format(message));\n    }\n}"]}