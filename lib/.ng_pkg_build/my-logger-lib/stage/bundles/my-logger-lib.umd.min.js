!function(e,o){"object"==typeof exports&&"undefined"!=typeof module?o(exports,require("@angular/core"),require("@angular/common")):"function"==typeof define&&define.amd?define("@my/logger-lib",["exports","@angular/core","@angular/common"],o):o((e.my=e.my||{},e.my["logger-lib"]={}),e.ng.core,e.ng.common)}(this,function(e,o,r){"use strict";function t(e,o){var r="function"==typeof Symbol&&e[Symbol.iterator];if(!r)return e;var t,n,i=r.call(e),a=[];try{for(;(void 0===o||0<o--)&&!(t=i.next()).done;)a.push(t.value)}catch(u){n={error:u}}finally{try{t&&!t.done&&(r=i["return"])&&r.call(i)}finally{if(n)throw n.error}}return a}var n=function(){};n.decorators=[{type:o.Injectable}];var i=function(){},a=function(){function e(e,o){this.config=e,this.logFormatter=o}return e.prototype.debug=function(e){this.config.enableDebug&&console.debug(this.logFormatter.format(e))},e.prototype.log=function(e){console.log(this.logFormatter.format(e))},e}();a.decorators=[{type:o.Injectable}],a.ctorParameters=function(){return[{type:n},{type:i}]};var u=function(){function e(){}return e.prototype.format=function(e){return e},e}();u.decorators=[{type:o.Injectable}];var c=function(){function o(){}return o.forRoot=function(e){return{ngModule:o,providers:function(){for(var e=[],o=0;o<arguments.length;o++)e=e.concat(t(arguments[o]));return e}([a,{provide:n,useValue:e}],e.logFormatterImplementation?[{provide:i,useClass:e.logFormatterImplementation}]:[{provide:i,useClass:u}])}},o}();c.decorators=[{type:o.NgModule,args:[{imports:[r.CommonModule],providers:[],declarations:[],exports:[]}]}],e.LoggerConfig=n,e.LoggerModule=c,e.LoggerService=a,e.LogFormatterService=i,e.DefaultLogFormatterService=u,Object.defineProperty(e,"__esModule",{value:!0})});
//# sourceMappingURL=my-logger-lib.umd.min.js.map